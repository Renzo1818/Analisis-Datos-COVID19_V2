/*
  AUTOR: RenzoZ
  OBJETIVO: CREAR TRIGGERS QUE PUEDAN REGISTRAR EN SUS RESPECTIVAS TABLAS ASIGNADAS EL TIPO DE TRANSACCION, EL USUARIO Y FECHA-HORA REALIZADA. ESTAS TRANSACCIONES SON LAS INSERCCIONES, ACTUALIZACION Y ELIMINACION DE DATOS
*/



-- CREACION DE TRIGGER TR_AUDITORIA_DIRESA

CREATE OR REPLACE TRIGGER TR_AUDITORIA_DIRESA
BEFORE INSERT OR UPDATE OR DELETE ON DIRESA
FOR EACH ROW
DECLARE
	V_ACCION AUDITORIA_DIRESA.ACCION%TYPE;
BEGIN
	IF INSERTING THEN
		V_ACCION := 'INSERCION';
	ELSIF UPDATING THEN
		V_ACCION := 'MODIFICACION';
	ELSIF DELETING THEN
		V_ACCION := 'ELIMINACION';
	END IF;
	
	INSERT INTO AUDITORIA_DIRESA(COD_AUDI_DIRESA, ACCION, USUARIO, FECHA)
	VALUES(SEQ_AUDITORIA_DIRESA.NEXTVAL, V_ACCION, USER,  SYSTIMESTAMP);
END;





-- CREACION DE TRIGGER TR_AUDITORIA_FABRICANTE

CREATE OR REPLACE TRIGGER TR_AUDITORIA_FABRICANTE
BEFORE INSERT OR UPDATE OR DELETE ON FABRICANTE
FOR EACH ROW
DECLARE
	V_ACCION AUDITORIA_FABRICANTE.ACCION%TYPE;
BEGIN
	IF INSERTING THEN
		V_ACCION := 'INSERCION';
	ELSIF UPDATING THEN
		V_ACCION := 'MODIFICACION';
	ELSIF DELETING THEN
		V_ACCION := 'ELIMINACION';
	END IF;
	
	INSERT INTO AUDITORIA_FABRICANTE(COD_AUDI_FABRICANTE, ACCION, USUARIO, FECHA)
	VALUES(SEQ_AUDITORIA_FABRICANTE.NEXTVAL, V_ACCION, USER,  SYSTIMESTAMP);
END;





-- CREACION DE TRIGGER TR_AUDITORIA_GRUPO_RIESGO

CREATE OR REPLACE TRIGGER TR_AUDITORIA_GRUPO_RIESGO
BEFORE INSERT OR UPDATE OR DELETE ON GRUPO_RIESGO
FOR EACH ROW
DECLARE
	V_ACCION AUDITORIA_GRUPO_RIESGO.ACCION%TYPE;
BEGIN
	IF INSERTING THEN
		V_ACCION := 'INSERCION';
	ELSIF UPDATING THEN
		V_ACCION := 'MODIFICACION';
	ELSIF DELETING THEN
		V_ACCION := 'ELIMINACION';
	END IF;
	
	INSERT INTO AUDITORIA_GRUPO_RIESGO(COD_AUDI_GRUPO, ACCION, USUARIO, FECHA)
	VALUES(SEQ_AUDITORIA_GRUPO_RIESGO.NEXTVAL, V_ACCION, USER,  SYSTIMESTAMP);
END;





-- CREACION DE TRIGGER TR_AUDITORIA_METODO_DETECCION

CREATE OR REPLACE TRIGGER TR_AUDITORIA_METODO_DETECCION
BEFORE INSERT OR UPDATE OR DELETE ON METODO_DETECCION
FOR EACH ROW
DECLARE
	V_ACCION AUDITORIA_METODO_DETECCION.ACCION%TYPE;
BEGIN
	IF INSERTING THEN
		V_ACCION := 'INSERCION';
	ELSIF UPDATING THEN
		V_ACCION := 'MODIFICACION';
	ELSIF DELETING THEN
		V_ACCION := 'ELIMINACION';
	END IF;
	
	INSERT INTO AUDITORIA_METODO_DETECCION(COD_AUDI_METODO, ACCION, USUARIO, FECHA)
	VALUES(SEQ_AUDITORIA_METODO.NEXTVAL, V_ACCION, USER,  SYSTIMESTAMP);
END;





-- CREACION DE TRIGGER TR_AUDITORIA_PERSONA

CREATE OR REPLACE TRIGGER TR_AUDITORIA_PERSONA
BEFORE INSERT OR UPDATE OR DELETE ON PERSONA
FOR EACH ROW
DECLARE
	V_ACCION AUDITORIA_PERSONA.ACCION%TYPE;
BEGIN
	IF INSERTING THEN
		V_ACCION := 'INSERCION';
	ELSIF UPDATING THEN
		V_ACCION := 'MODIFICACION';
	ELSIF DELETING THEN
		V_ACCION := 'ELIMINACION';
	END IF;
	
	INSERT INTO AUDITORIA_PERSONA(COD_AUDI_PERSONA, ACCION, USUARIO, FECHA)
	VALUES(SEQ_AUDITORIA_PERSONA.NEXTVAL, V_ACCION, USER,  SYSTIMESTAMP);
END;





-- CREACION DE TRIGGER TR_AUDITORIA_CASOS_POSITIVOS

CREATE OR REPLACE TRIGGER TR_AUDITORIA_CASOS_POSITIVOS
BEFORE INSERT OR UPDATE OR DELETE ON CASOS_POSITIVOS
FOR EACH ROW
DECLARE
	V_ACCION AUDITORIA_CASOS_POSITIVOS.ACCION%TYPE;
BEGIN
	IF INSERTING THEN
		V_ACCION := 'INSERCION';
	ELSIF UPDATING THEN
		V_ACCION := 'MODIFICACION';
	ELSIF DELETING THEN
		V_ACCION := 'ELIMINACION';
	END IF;
	
	INSERT INTO AUDITORIA_CASOS_POSITIVOS(COD_AUDI_POSITIVOS, ACCION, USUARIO, FECHA)
	VALUES(SEQ_AUDITORIA_POSITIVOS.NEXTVAL, V_ACCION, USER,  SYSTIMESTAMP);
END;





-- CREACION DE TRIGGER TR_AUDITORIA_REGISTRO_VACUNACION

CREATE OR REPLACE TRIGGER TR_AUDITORIA_REGISTRO_VACUNACION
BEFORE INSERT OR UPDATE OR DELETE ON REGISTRO_VACUNACION
FOR EACH ROW
DECLARE
	V_ACCION AUDITORIA_REGISTRO_VACUNACION.ACCION%TYPE;
BEGIN
	IF INSERTING THEN
		V_ACCION := 'INSERCION';
	ELSIF UPDATING THEN
		V_ACCION := 'MODIFICACION';
	ELSIF DELETING THEN
		V_ACCION := 'ELIMINACION';
	END IF;
	
	INSERT INTO AUDITORIA_REGISTRO_VACUNACION(COD_AUDI_VACUNACION, ACCION, USUARIO, FECHA)
	VALUES(SEQ_AUDITORIA_VACUNACION.NEXTVAL, V_ACCION, USER,  SYSTIMESTAMP);
END;
